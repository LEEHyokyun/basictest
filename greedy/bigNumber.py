#각 자리 숫자가 0부터 9까지 이루어진 문자열 S이 주어졌다고 하자.
#왼쪽부터 오른쪽까지 하나씩 모든 숫자를 확인해가며 결과적으로 만들어질 수 있는 가장 큰 숫자를 구하는 알고리즘은 무엇인가
#단 모든 연산은 왼쪽부터 순서대로 진행한다.

#곱하기 기준을 적용하는 그리디 알고리즘이긴 한데, 항상 곱하기가 큰 수를 만들 수 있는가?
#이때 별도의 기준도 같이 필요
#두 수 중 하나라도 0 혹은 1일 경우, 더하기 수행
#두 수 모두 2이상이라면 곱하기
import sys
#입력의 최초 형태는 숫자로 구성된 "문자열"
#최초 test case 및 정수는 input()으로 입력받아도 무방
data = input()

#비교는 항상 마주하는 두 수에 대해 진행
result = int(data[0])

for i in range(1, len(data)):
    #두 수 중 하나라도 0 혹은 1일 경우 더하기 수행
    #이때 두 수는 일전의 결과와 다음 숫자를 의미
    num = int(data[1])
    if result <=1 and num <=1:
        result = result + num
    else:
        result = result * num

print(result)