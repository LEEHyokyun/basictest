#왕국의 왕실 정원이 8*8의 좌표평면의 크기를 가진다고 가정한다.
#이때 정원 안에 있는 나이트가 이동할 수 있는 모든 경우의 수를 출력하는 알고리즘은?
#정원밖으로는 나갈 수 없다.
#행의 위치는 양의 정수로(1,2,3..), 열의 위치는 알파벳 문자로(a,b,c..) 표현한다
#현재 위치는 열행으로 표현한다(예를 들어 a2)
#단, 나이트는 특정 위치에서 다음과 같은 2가지 경우로 이동가능하다.
##수평으로 2칸 이동한 후 수직으로 1칸 이동하기
##수직으로 2칸 이동한 후 수평으로 1칸 이동하기

#기본적으로 이동하는 문제는 갈 수 있는 dx, dy를 잘 표현할 수 있는가가 중요하다.
#매번 갈 수 있는 경로가 가능한 경우인지 확인할 수 있으면 된다.

INPUT = input()
#행
row = int(INPUT[1])
#열(*아스키코드 형태로 바꾸기)
column = int(ord(INPUT[0]))-int(ord('a'))+1

#나이트가 이동할 수 있는 8가지 방향(*튜플)
#각 이동할 수 있는 행/열의 값임
steps = [(-2,-1),(-1,-2),(1,-2),(2,-1),(2,1),(1,2),(-1,2),(-2,-1)]

result = 0
for step in steps:
    nextRow = row + step[0]
    nextColumn = column + step[1]
    #경계조건
    if nextRow>8 or nextRow<1 or nextColumn>8 or nextColumn<1:
        result = result + 1

print(result)
